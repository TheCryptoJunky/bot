# File: /tests/test_triangle_arbitrage_bot.py

import unittest
from src.bots.triangle_arbitrage_bot import TriangleArbitrageBot  # Corrected import path
from unittest.mock import MagicMock

class TestTriangleArbitrageBot(unittest.TestCase):
    """
    Unit test for the TriangleArbitrageBot. Verifies that the bot detects and executes
    triangle arbitrage opportunities.
    """

    def setUp(self):
        """
        Set up the test environment. Initialize TriangleArbitrageBot for testing.
        """
        self.bot = TriangleArbitrageBot()

    def test_detect_triangle_arbitrage(self):
        """
        Test detecting triangle arbitrage opportunities.
        """
        self.bot.detect_triangle_arbitrage = MagicMock(return_value=True)
        result = self.bot.detect_triangle_arbitrage('ETH/USDT', 'BTC/USDT', 'ETH/BTC')
        self.assertTrue(result)

    def test_execute_triangle_arbitrage(self):
        """
        Test executing a triangle arbitrage trade.
        """
        self.bot.execute_triangle_arbitrage = MagicMock(return_value=True)
        result = self.bot.execute_triangle_arbitrage('ETH/USDT', 'BTC/USDT', 'ETH/BTC')
        self.assertTrue(result)

if __name__ == '__main__':
    unittest.main()
